#!/usr/bin/env bats

############################ DO NOT EDIT THIS FILE #####################################
# File: assignement_tests.sh
# 
# DO NOT EDIT THIS FILE
#
# Add/Edit Student tests in student_tests.sh
# 
# All tests in this file must pass - it is used as part of grading!
########################################################################################

@test "Change directory" {
    current=$(pwd)

    cd /tmp
    mkdir -p dsh-test

    run "${current}/dsh" <<EOF                
cd dsh-test
pwd
EOF

    # Extract only the last non-empty line as expected output
    expected_output="/tmp/dsh-test"

    # Debugging output
    echo "Captured stdout: $output"
    echo "Exit Status: $status"

    # Check if last line of output is expected
    [[ "$(echo "$output" | tail -n 1)" == "$expected_output" ]]

    # Ensure exit code is 0
    [ "$status" -eq 0 ]
}

@test "Change directory - no args" {
    current=$(pwd)

    cd /tmp
    mkdir -p dsh-test

    run "${current}/dsh" <<EOF                
cd
pwd
EOF

    # Extract only the last non-empty line as expected output
    expected_output="/tmp"

    # Debugging output
    echo "Captured stdout: $output"
    echo "Exit Status: $status"

    # Check if last line of output is expected
    [[ "$(echo "$output" | tail -n 1)" == "$expected_output" ]]

    # Ensure exit code is 0
    [ "$status" -eq 0 ]
}

@test "Which which ... which?" {
    run "./dsh" <<EOF                
which which
EOF

    # Extract only the last non-empty line as expected output
    expected_output="$(which which)"

    # Debugging output
    echo "Captured stdout: $output"
    echo "Exit Status: $status"

    # Check if last line of output is expected
    [[ "$(echo "$output" | tail -n 1)" == "$expected_output" ]]

    # Ensure exit code is 0
    [ "$status" -eq 0 ]
}

@test "It handles quoted spaces" {
    run "./dsh" <<EOF                
echo " hello     world     " 
EOF

    # Extract only the actual output (removing the shell prompt)
    expected_output=" hello     world     "

    # Debugging output
    echo "Captured stdout: $output"
    echo "Exit Status: $status"

    # Check if the first non-empty line matches the expected output
    [[ "$(echo "$output" | head -n 1)" == "$expected_output" ]]

    # Ensure exit code is 0
    [ "$status" -eq 0 ]
}
